ext.junitJupiterVersion  = '5.8.1'


apply plugin: 'java'
apply plugin: 'jacoco'

version = '1.0-SNAPSHOT'

compileTestJava {
    sourceCompatibility = 11
    targetCompatibility = 11
    options.compilerArgs += '-parameters'
}

repositories {
    if (project.hasProperty("local_repository") || System.getProperty("local_repository") != null) {
        mavenLocal()
    } else {
        mavenCentral()
    }
}

dependencies {
    implementation project(':common')
    implementation group: 'com.sparkjava', name: 'spark-core', version: '2.9.2'
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.11.2'
    implementation group: 'com.github.jsqlparser', name: 'jsqlparser', version: '4.6'

    testRuntimeOnly group: 'org.postgresql', name: 'postgresql', version: '42.2.16'
    testRuntimeOnly group: 'com.mysql', name: 'mysql-connector-j', version: '8.0.33'

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'
    testImplementation("org.junit.jupiter:junit-jupiter-params:5.8.1")
}

task fatJar(type: Jar) {
    manifest {
        attributes 'Implementation-Title': 'JDBC driver over HTTP',
                'Implementation-Version': "1.0",
                'Main-Class': 'com.nosqldriver.jdbc.http.ServerLoader'
    }
    archiveBaseName = project.name + '-all'
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    from { configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}
